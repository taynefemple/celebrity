header {
    text-align: center;
}

#celeb {
    padding: 4px 10px;
    line-height: 27px;
    font-size: 24px;
}

.celeb {
    margin: 100px 0;
    font-size: 3em;
    text-align: center;
}

#hint {
    padding: 4px 10px;
    line-height: 27px;
    font-size: 24px;
}

.hint {
    margin: 100px 0;
    font-size: 3em;
    text-align: center;
}

.label {
    font-family: Arial;
    font-size: 24px;
    margin: 10px;
}

.button {
    box-shadow: 3px 4px 0px 0px #899599;
    background: linear-gradient(to bottom, #ededed 5%, #bab1ba 100%);
    background-color: #ededed;
    border-radius: 15px;
    border: 1px solid #d6bcd6;
    display: inline-block;
    cursor: pointer;
    color: #3a8a9e;
    font-family: Arial;
    font-size: 17px;
    padding: 7px 25px;
    text-decoration: none;
    text-shadow: 0px 1px 0px #e1e2ed;
}

.button:hover {
    background: linear-gradient(to bottom, #bab1ba 5%, #ededed 100%);
    background-color: #bab1ba;
}

.add-celeb-button:active {
    position: relative;
    top: 1px;
}

.interaction {
    margin: 20px 0;
    text-align: center;
}

.clue-box {
    box-sizing: border-box;
    margin: auto;
    width: 50%;
    height: 350px;
    border: solid #5b6dcd 10px;
    padding: 5px;
}

/* Setting blackout when not player's turn */

.blackout {
    background-color: #efefef;
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 1000;
    top: 0px;
    left: 0px;
    opacity: 0.5;
}

/* Timer Begin */

/* Sets the containers height and width */
.base-timer {
    position: relative;
    height: 300px;
    width: 300px;
    margin: auto;
}

/* Removes SVG styling that would hide the time label */
.base-timer__circle {
    fill: none;
    stroke: none;
}

/* The SVG path that displays the timer's progress */
.base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: grey;
}

.base-timer__label {
    position: absolute;

    /* Size should match the parent container */
    width: 300px;
    height: 300px;

    /* Keep the label aligned to the top */
    top: 0;

    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 48px;
}

.base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;

    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;

    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;

    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;

    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;
}

.base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
}

.base-timer__path-remaining.green {
    color: rgb(65, 184, 131);
}

.base-timer__path-remaining.orange {
    color: orange;
}

.base-timer__path-remaining.red {
    color: red;
}
/* Timer End */
